import{p as e}from"./phaser-C2_wa_Fb.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class t extends e.Scene{constructor(){super("Boot")}preload(){window.location.hostname.startsWith("localhost")||this.load.setPath("/res/phaser/games/racerwitharcade/dist"),this.load.tilemapTiledJSON("jsonLevel","/assets/map.json"),this.load.image("tilesetPNG","/assets/tiles.jpg"),this.load.spritesheet("player0","/assets/player0.png",{frameWidth:32,frameHeight:32}),this.load.spritesheet("player1","/assets/player1.png",{frameWidth:32,frameHeight:32}),this.load.spritesheet("player2","/assets/player2.png",{frameWidth:32,frameHeight:32}),this.load.spritesheet("player3","/assets/player3.png",{frameWidth:32,frameHeight:32}),this.load.image("win","/assets/win.jpg")}create(){this.scene.start("Game")}}class s extends e.Scene{constructor(){super("Game")}create(){const e=this.make.tilemap({key:"jsonLevel"}),t=e.addTilesetImage("nombreDelTilesetEnTiled","tilesetPNG");this.collisionLayer=e.createLayer("collisionLayer",t,0,0),this.collisionLayer.setCollisionByExclusion([-1]),this.roadLayer=e.createLayer("roadLayer",t,0,0),this.players=[],this.amountOfPlayers=4,this.createPlayers([{x:280,y:500,leftbtn:{x:30,y:540,rotacion:45},rightbtn:{x:90,y:600,rotacion:45}},{x:360,y:500,leftbtn:{x:870,y:30,rotacion:45},rightbtn:{x:930,y:90,rotacion:45}},{x:300,y:550,leftbtn:{x:30,y:90,rotacion:-45},rightbtn:{x:90,y:30,rotacion:-45}},{x:380,y:550,leftbtn:{x:870,y:600,rotacion:-45},rightbtn:{x:930,y:540,rotacion:-45}}]),this.cursors=this.input.keyboard.createCursorKeys(),this.drawGoal(e,this.playersGroup),this.showScore(),this.createMarkers()}createPlayers(e){this.playersGroup=this.physics.add.group();for(let t=0;t<this.amountOfPlayers;t++)this.players[t]=this.playersGroup.create(e[t].x,e[t].y,`player${t}`),this.players[t].number=t,this.players[t].score=0,this.players[t].setData("nextMarker",0),this.anims.create({key:`volar${t}`,frames:this.anims.generateFrameNumbers(`player${t}`,{start:0,end:1}),frameRate:10,repeat:-1}),this.players[t].play(`volar${t}`),this.players[t].speed=0;this.physics.add.collider(this.playersGroup,this.playersGroup),this.physics.add.collider(this.playersGroup,this.collisionLayer)}update(){for(let e=0;e<this.amountOfPlayers;e++){const t=this.players[e];t.speed<=200&&(t.speed+=7),t.body.setAcceleration(t.speed*Math.cos(Phaser.Math.DegToRad(t.angle-180)),t.speed*Math.sin(Phaser.Math.DegToRad(t.angle-180))),this.cursors.left.isDown?t.rotation-=.05:this.cursors.right.isDown&&(t.rotation+=.05)}}drawGoal(e,t){const s=((e,t)=>{const s=[];return t.objects.forEach((function(e){"objectsLayer"===e.name&&e.objects.forEach((function(e){"goal"===e.type&&(e.y-=t.tileHeight,s.push(e))}))})),s})(0,e)[0];console.log("33333333",s);const a=this.add.zone(s.x,s.y+32,s.width,s.height).setOrigin(0,0);this.physics.world.enable(a),this.physics.add.overlap(t,a,this.enterInArea,null,this)}enterInArea(e,t){const s=t.getData("nextMarker");console.log("111111111111",s,this.markers.getChildren().length),s===this.markers.getChildren().length&&(t.score++,3===t.score&&alert("3 vueltas completadas!"),this["score"+t.number].setText(t.score),t.setData("nextMarker",0))}createMarkers(){this.markers=this.physics.add.staticGroup(),this.markers.create(128,460,"__DEFAULT").setSize(128,8).setData("id",0).setData("direction",Phaser.UP),this.markers.create(128,200,"__DEFAULT").setSize(128,8).setData("id",1).setData("direction",Phaser.UP),this.markers.create(800,94,"__DEFAULT").setSize(8,64).setData("id",2).setData("direction",Phaser.RIGHT),this.markers.create(900,360,"__DEFAULT").setSize(96,8).setData("id",3).setData("direction",Phaser.DOWN),this.markers.create(416,448,"__DEFAULT").setSize(8,96).setData("id",4).setData("direction",Phaser.LEFT),this.physics.add.overlap(this.playersGroup,this.markers,this.hitMarker,null,this)}hitMarker(e,t){let s=t.getData("id");s===e.getData("nextMarker")&&e.setData("nextMarker",s+1)}showScore(){this.add.text(200,275,"P1:",{fontFamily:"font1",fontSize:24,color:"#00ff00"}),this.add.text(280,275,"P2:",{fontFamily:"font1",fontSize:24,color:"#00ff00"}),this.add.text(200,315,"P3:",{fontFamily:"font1",fontSize:24,color:"#00ff00"}),this.add.text(280,315,"P4:",{fontFamily:"font1",fontSize:24,color:"#00ff00"}),this.score0=this.add.text(240,275,"0",{fontFamily:"font1",fontSize:24,color:"#ffffff"}),this.score1=this.add.text(320,275,"0",{fontFamily:"font1",fontSize:24,color:"#ffffff"}),this.score2=this.add.text(240,315,"0",{fontFamily:"font1",fontSize:24,color:"#ffffff"}),this.score3=this.add.text(320,315,"0",{fontFamily:"font1",fontSize:24,color:"#ffffff"})}}class a extends e.Scene{constructor(){super("GameOver")}create(){this.add.image(0,0,"win").setOrigin(0),this.input.once("pointerdown",(()=>{this.scene.start("Game")}))}}class r extends e.Scene{constructor(){super("MainMenu")}create(){this.add.image(512,384,"background"),this.add.image(512,300,"logo"),this.add.text(512,460,"Main Menu",{fontFamily:"Arial Black",fontSize:38,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5),this.input.once("pointerdown",(()=>{this.scene.start("Game")}))}}class i extends e.Scene{constructor(){super("Preloader")}init(){this.add.image(512,384,"background"),this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const e=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",(t=>{e.width=4+460*t}))}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png")}create(){this.scene.start("MainMenu")}}const o={type:Phaser.AUTO,width:960,height:640,parent:"game-container",backgroundColor:"#028af8",scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}},scene:[t,i,r,s,a]};new Phaser.Game(o);
