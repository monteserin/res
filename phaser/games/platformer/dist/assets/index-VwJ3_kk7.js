import{p as t}from"./phaser-cxBNu8M8.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();class e extends t.Scene{constructor(){super("Boot")}preload(){this.load.setPath("/res/phaser/games/platformer/dist"),this.load.tilemapTiledJSON("jsonLevel","/assets/maps/map.json"),this.load.image("tilesetPNG","/assets/maps/tiles.png"),this.load.image("arrow","/assets/arrow.png"),this.load.image("back","/assets/back.jpg"),this.load.image("lose","/assets/lose.jpg"),this.load.image("win","/assets/win.jpg"),this.load.image("goal","/assets/goal.png"),this.load.spritesheet("ant","/assets/ant.png",{frameWidth:192,frameHeight:96}),this.load.spritesheet("bee","/assets/bee.png",{frameWidth:128,frameHeight:128}),this.load.spritesheet("caterpillar","/assets/caterpillar.png",{frameWidth:96,frameHeight:192}),this.load.spritesheet("crash","/assets/crash.png",{frameWidth:199,frameHeight:200}),this.load.spritesheet("player","/assets/player.png",{frameWidth:180,frameHeight:180})}create(){this.anims.create({key:"antWalk",frames:this.anims.generateFrameNumbers("ant",{start:0,end:3}),frameRate:7,repeat:-1}),this.anims.create({key:"beeFly",frames:this.anims.generateFrameNumbers("bee",{start:0,end:2}),frameRate:10,repeat:-1}),this.anims.create({key:"caterpillarWalk",frames:this.anims.generateFrameNumbers("caterpillar",{start:0,end:3}),frameRate:7,repeat:-1}),this.scene.start("Game")}}class s extends Phaser.Physics.Arcade.Sprite{constructor(t,e,s){super(t,e,s,"player"),t.add.existing(this),t.physics.add.existing(this),this.body.gravity.y=700,this.setSize(90,180,!0),this.cursors=this.scene.input.keyboard.createCursorKeys(),this.createAnimations(),this.play("idle",!0),this.onGround=!1,this.visualControls(t),this.isAlive=!0,this.on("animationcomplete",this.animationComplete,this),this.anims.create({key:"crashAnim",frames:this.anims.generateFrameNumbers("crash",{start:0,end:4}),frameRate:7}),this.setCollideWorldBounds(!0),this.body.onWorldBounds=!0}createAnimations(){this.anims.create({key:"walk",frames:this.anims.generateFrameNumbers("player",{start:2,end:5}),frameRate:10,repeat:-1}),this.anims.create({key:"idle",frames:this.anims.generateFrameNumbers("player",{start:0,end:1}),frameRate:4,repeat:-1}),this.anims.create({key:"fall",frames:this.anims.generateFrameNumbers("player",{start:6,end:7}),frameRate:7,repeat:-1})}static loadAssets(t){t.load.spritesheet("player",player,{frameWidth:180,frameHeight:180}),t.load.image("arrow",arrow)}update(){this.isAlive&&(this.isDazing||(this.onGround=this.body.onFloor(),this.cursors.left.isDown||this.getData("horizontalDirection")===Phaser.LEFT?this.leftWalk():this.cursors.right.isDown||this.getData("horizontalDirection")===Phaser.RIGHT?this.rightWalk():this.idle(),(this.cursors.up.isDown||this.getData("isJumping")===Phaser.UP)&&this.jump()))}leftWalk(){this.body.setVelocityX(-250),this.flipX=!0,this.onGround&&this.play("walk",!0)}rightWalk(){this.body.setVelocityX(250),this.flipX=!1,this.onGround&&this.play("walk",!0)}idle(){this.body.setVelocityX(0),this.onGround&&this.play("idle",!0)}jump(){this.onGround&&(this.body.setVelocityY(-600),this.play("fall",!0))}visualControls(t){const e=t.game.config.height,s=t.add.sprite(50,e-30,"arrow").setInteractive();s.setDepth(200),s.setScrollFactor(0,0);const i=t.add.sprite(140,e-30,"arrow").setInteractive();i.flipX=!0,i.setDepth(200),i.setScrollFactor(0,0);const a=t.add.sprite(850,e-30,"arrow").setInteractive();a.rotation=Math.PI/2,a.setDepth(200),a.setScrollFactor(0,0),this.setData("horizontalDirection",0),this.setData("isJumping",!1),s.on("pointerdown",(()=>{this.setData("horizontalDirection",Phaser.LEFT)})),i.on("pointerdown",(()=>{this.setData("horizontalDirection",Phaser.RIGHT)})),a.on("pointerdown",(()=>{this.setData("isJumping",Phaser.UP)})),s.on("pointerup",(()=>{this.setData("horizontalDirection",Phaser.NONE)})),i.on("pointerup",(()=>{this.setData("horizontalDirection",Phaser.NONE)})),a.on("pointerup",(()=>{this.setData("isJumping",Phaser.NONE)}))}checkEnemy(t,e){this.body.velocity.y>0?e.die():this.die()}die(){this.isAlive=!1,this.disableBody(),this.play("crashAnim")}animationComplete(t,e,s){"crashAnim"===t.key&&this.scene.scene.start("Lose")}playerHittedByBee(){this.isDazing=!0,this.body.setVelocity(-150,-150),this.play("fall",!0),this.scene.time.addEvent({delay:1e3,callback:this.dazeFinished,callbackScope:this})}dazeFinished(){this.isDazing=!1}}class i extends Phaser.Physics.Arcade.Sprite{constructor(t,e,s,i){super(t,e,s,i),t.physics.add.collider(this,t.collisionLayer),t.add.existing(this),this.speed=100,this.direction=1,this.anims.create({key:"crashAnim",frames:this.anims.generateFrameNumbers("crash",{start:0,end:4}),frameRate:7}),this.on("animationcomplete",this.animationComplete,this)}animationComplete(t,e,s){"crashAnim"===t.key&&this.destroy()}update(){this.body.setVelocityX(this.direction*this.speed);const t=Math.floor(this.x/32)+this.direction;let e=this.y+this.height/2;e=Math.round(e/32),!this.scene.collisionLayer.hasTileAt(t,e)&&this.body.blocked.down&&(this.direction*=-1),this.direction>0?this.flipX=!1:this.flipX=!0}die(){this.disableBody(),this.play("crashAnim")}}class a extends i{constructor(t,e,s){super(t,e,s,"ant"),this.play("antWalk")}static loadAssets(t){}}class r extends i{constructor(t,e,s){super(t,e,s,"caterpillar"),this.play("caterpillarWalk")}}class h extends Phaser.Physics.Arcade.Sprite{constructor(t,e,s){super(t,e,s,"bee"),t.add.existing(this),this.play("beeFly"),this.flyPath=new Phaser.Curves.Ellipse(e,s,100,100),this.pathIndex=0,this.pathSpeed=.001,this.currentPosition=new Phaser.Math.Vector2,this.flyPath.getPoint(this.pathIndex,this.currentPosition),this.setPosition(this.currentPosition.x,this.currentPosition.y),this.patrolCircle=new Phaser.Geom.Circle(0,0,256),this.attackPath=new Phaser.Curves.Line([0,0,0,0]),this.on("animationcomplete",this.animationComplete,this),this.startPlace=new Phaser.Math.Vector2(this.currentPosition.x,this.currentPosition.y)}update(t){this.x<this.scene.player.x?this.flipX=!0:this.flipX=!1,this.state===h.FLYING?this.checkPlayer(t):this.state===h.CHASING?this.chasePlayer(t):this.state===h.RETURNING&&(this.pathIndex+=2*this.pathSpeed,this.attackPath.getPoint(this.pathIndex,this.currentPosition),this.setPosition(this.currentPosition.x,this.currentPosition.y),this.pathIndex>=1&&this.keepFlying())}chasePlayer(t){const e=this.scene.player;this.attackPath.p1.set(e.x,e.y),this.pathIndex+=2*this.pathSpeed,this.attackPath.getPoint(this.pathIndex,this.currentPosition),this.setPosition(this.currentPosition.x,this.currentPosition.y),this.scene.physics.overlap(this,e)&&(this.play("beeAttack",!0),e.playerHittedByBee()),!this.patrolCircle.contains(e.x,e.y)&&t-this.timeFromStartingToChase>4e3&&this.returnHome()}checkPlayer(t){this.pathIndex=Phaser.Math.Wrap(this.pathIndex+this.pathSpeed,0,1),this.flyPath.getPoint(this.pathIndex,this.currentPosition),this.setPosition(this.currentPosition.x,this.currentPosition.y),this.patrolCircle.x=this.x,this.patrolCircle.y=this.y;const e=this.scene.player;this.patrolCircle.contains(e.x,e.y)&&(this.attackPath.p0.set(this.x,this.y),this.attackPath.p1.set(e.x,e.y),this.pathIndex=0,this.state=h.CHASING,this.timeFromStartingToChase=t)}animationComplete(t,e,s){"beeAttack"===t.key&&this.returnHome()}returnHome(){this.play("beeFly",!0),this.attackPath.p0.set(this.x,this.y),this.attackPath.p1.set(this.startPlace.x,this.startPlace.y),this.pathIndex=0,this.state=h.RETURNING}keepFlying(){this.state=h.FLYING,this.pathIndex=0}}h.FLYING=0,h.CHASING=1,h.RETURNING=2;class n extends Phaser.Scene{constructor(){super("Game")}create(){const t=this.sys.game.config.width,e=this.sys.game.config.height;this.bg=this.add.tileSprite(t/2,e/2,t,e,"back").setScrollFactor(0);const i=this.make.tilemap({key:"jsonLevel"}),n=i.addTilesetImage("nombreDelTilesetEnTiled","tilesetPNG");this.collisionLayer=i.createLayer("collisionLayer",n);const o=this.findObjectsByClassInObjectsLayer("player",i);this.player=new s(this,o[0].x,o[0].y),this.collisionLayer.setCollisionByExclusion([-1]),this.physics.add.collider(this.player,this.collisionLayer),i.createLayer("grassLayer",n).setDepth(100),i.createLayer("backgroundLayer",n),this.cameras.main.setSize(t,e),this.cameras.main.scrollY=0;const l=this.findObjectsByClassInObjectsLayer("antEnemy",i),c=this.insertBadGuys(this,l,a);this.physics.add.overlap(this.player,c,this.player.checkEnemy,null,this.player);const d=this.findObjectsByClassInObjectsLayer("caterpillarEnemy",i),p=this.insertBadGuys(this,d,r);this.physics.add.overlap(this.player,p,this.player.checkEnemy,null,this.player);const y=this.findObjectsByClassInObjectsLayer("beeEnemy",i);this.insertBadGuys(this,y,h);const m=this.findObjectsByClassInObjectsLayer("goal",i)[0];this.putCheckPoint(m.x,m.y,"goal"),this.cameras.main.setBounds(0,0,3520,640),this.physics.world.setBoundsCollision(!1,!1,!1,!0),this.physics.world.on("worldbounds",(()=>{this.scene.start("GameOver")}))}putCheckPoint(t,e,s){const i=this.physics.add.sprite(t,e,s);i.body.immovable=!0,i.body.moves=!1,i.setSize(160,160),this.physics.add.overlap(this.player,i,this.playerReachGoal,null,this)}playerReachGoal(){this.scene.start("Win")}insertBadGuys(t,e,s){const i=t.physics.add.group({classType:s,runChildUpdate:!0,runChildCreate:!0,gravityY:100});for(let a=0;a<e.length;a++){const r=new s(t,e[a].x,e[a].y);i.add(r)}return i}update(t,e){this.player.update(),this.cameras.main.scrollX=this.player.x-400,this.bg.tilePositionX=this.player.x}findObjectsByClassInObjectsLayer(t,e){const s=[];return e.objects.forEach((function(i){"objectsLayer"===i.name&&i.objects.forEach((function(i){i.type===t&&(i.y-=e.tileHeight,s.push(i))}))})),s}}class o extends t.Scene{constructor(){super("GameOver")}create(){this.add.image(0,0,"lose").setOrigin(0),this.input.once("pointerdown",(()=>{this.scene.start("Game")}))}}class l extends t.Scene{constructor(){super("MainMenu")}create(){this.add.image(512,384,"background"),this.add.image(512,300,"logo"),this.add.text(512,460,"Main Menu",{fontFamily:"Arial Black",fontSize:38,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5),this.input.once("pointerdown",(()=>{this.scene.start("Game")}))}}class c extends t.Scene{constructor(){super("Preloader")}init(){this.add.image(512,384,"background"),this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const t=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",(e=>{t.width=4+460*e}))}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png")}create(){this.scene.start("MainMenu")}}class d extends Phaser.Scene{constructor(){super("Win")}create(){this.add.image(0,0,"win").setOrigin(0),this.input.once("pointerdown",(()=>{this.scene.start("Game")}))}update(){}}const p={type:Phaser.AUTO,width:960,height:640,parent:"game-container",backgroundColor:"#028af8",scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},physics:{default:"arcade",arcade:{gravity:{y:300},debug:!1}},scene:[e,c,l,n,o,d]};new Phaser.Game(p);
