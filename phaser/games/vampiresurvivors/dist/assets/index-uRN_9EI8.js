var e=Object.defineProperty;import{p as t}from"./phaser-cxBNu8M8.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class s extends t.Scene{constructor(){super("Boot")}preload(){this.load.setPath("/res/phaser/games/vampiresurvivors/dist"),this.load.image("trap","/assets/images/trap.png"),this.load.image("bomb","/assets/images/player/arrow.png"),this.load.spritesheet("idle","/assets/images/player/Idle (32x32).png",{frameWidth:32,frameHeight:32}),this.load.spritesheet("walk","/assets/images/player/Run (32x32).png",{frameWidth:32,frameHeight:32}),this.load.spritesheet("hitted","/assets/images/player/Hit (32x32).png",{frameWidth:32,frameHeight:32}),this.load.image("arrow","/assets/images/player/arrow.png"),this.load.spritesheet("playerIdle","/assets/images/player/Idle (32x32).png",{frameWidth:32,frameHeight:32}),this.load.spritesheet("crash","/assets/images/player/Idle (32x32).png",{frameWidth:32,frameHeight:32}),this.load.spritesheet("enemy1walk","/assets/images/enemy/1/Run (32x32).png",{frameWidth:32,frameHeight:32})}create(){this.anims.create({key:"enemy1walk",frames:this.anims.generateFrameNumbers("enemy1walk",{start:0,end:11}),frameRate:24,repeat:-1}),this.anims.create({key:"crashAnim",frames:this.anims.generateFrameNumbers("crash",{start:0,end:4}),frameRate:7}),this.anims.create({key:"walk",frames:this.anims.generateFrameNumbers("walk",{start:0,end:11}),frameRate:24,repeat:-1}),this.anims.create({key:"idle",frames:this.anims.generateFrameNumbers("idle",{start:0,end:10}),frameRate:20,repeat:-1}),this.anims.create({key:"hitted",frames:this.anims.generateFrameNumbers("hitted",{start:0,end:6}),frameRate:20,repeat:-1,onRepeat:function(e,t){e.setTint(16711680)}}),this.scene.start("Game")}}class i extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s){super(e,t,s,"player"),e.add.existing(this),e.physics.add.existing(this),this.cursors=this.scene.input.keyboard.createCursorKeys(),this.play("idle",!0),this.isMoving=!1,this.isAlive=!0,this.isHitted=!1,this.on("animationcomplete",this.animationComplete,this)}update(){this.isMoving=!1,this.isAlive&&(this.isDazing||(this.cursors.left.isDown?this.leftWalk():this.cursors.right.isDown?this.rightWalk():this.setVelocityX(0),this.cursors.up.isDown?this.upWalk():this.cursors.down.isDown?this.downWalk():this.setVelocityY(0),0===this.body.velocity.x&&0===this.body.velocity.y&&this.play(this.isHitted?"hitted":"idle",!0)))}leftWalk(){this.isMoving=!0,this.body.setVelocityX(-250),this.flipX=!0,this.play(this.isHitted?"hitted":"walk",!0)}rightWalk(){this.isMoving=!0,this.body.setVelocityX(250),this.flipX=!1,this.play(this.isHitted?"hitted":"walk",!0)}upWalk(){this.isMoving=!0,this.body.setVelocityY(-250)}downWalk(){this.isMoving=!0,this.body.setVelocityY(250)}idle(){this.body.setVelocityX(0)}checkEnemy(e,t){this.isDazing=!0}die(){this.isAlive=!1,this.disableBody(),this.play("crashAnim")}animationComplete(e,t,s){"crashAnim"===e.key&&this.scene.scene.start("Lose")}playerHittedByBee(){this.isDazing=!0,this.body.setVelocity(-150,-150),this.play("fall",!0),this.scene.time.addEvent({delay:1e3,callback:this.dazeFinished,callbackScope:this})}dazeFinished(){alert(1111),this.isDazing=!1}}class a extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s,i){super(e,t,s,i),e.physics.add.collider(this,e.collisionLayer),e.add.existing(this),this.speed=100,this.pathIndex=0,this.attackPath=new Phaser.Curves.Line([0,0,0,0]),this.currentPosition=new Phaser.Math.Vector2,this.on("animationcomplete",this.animationComplete,this)}animationComplete(e,t,s){e.key}update(e){const t=this.scene.player;this.chasePlayer(e),this.x>t.x?this.setFlipX(!0):this.setFlipX(!1)}chasePlayer(){const e=this.scene.player;this.scene.physics.moveTo(this,e.x,e.y,this.speed),this.scene.physics.overlap(this,e)}die(){}}class r extends a{constructor(e,t,s){super(e,t,s,"caterpillar"),this.play("enemy1walk")}}class n extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s){super(e,t,s,"arrow"),e.physics.add.collider(this,e.collisionLayer),e.add.existing(this),console.log("11111111111",this)}create(){}update(){}activate(){alert("trap activated")}}const h=(e,t,s,i,a,r)=>{let n=[];for(let h=0;h<r;){let r=Math.random()*Math.PI*2,o=Math.random()*(i-s)+s,l=e+o*Math.cos(r),c=t+o*Math.sin(r);n.every((e=>Math.hypot(e.x-l,e.y-c)>=a))&&(n.push({x:l,y:c}),h++)}return n};class o extends Phaser.Scene{constructor(){var t;super("Game"),((t,s,i)=>{s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i})(this,"symbol"!=typeof(t="generateEnemyWave")?t+"":t,(()=>{}))}create(){const e=this.game.config.width,t=this.game.config.height;this.player=new i(this,e/2,t/2),this.cameras.main.startFollow(this.player);const s=h(this.player.x,this.player.y,500,1200,20,20),a=this.insertBadGuys(this,s,r);this.physics.add.collider(this.player,a,this.player.checkEnemy,null,this.player);const o=h(this.player.x,this.player.y,500,1200,20,1),l=this.insertBadGuys(this,o,n);console.log("traps array",l),console.log("test",l.children),this.physics.add.collider(this.player,l,((e,t)=>{t.activate()}),null,this)}insertBadGuys(e,t,s){const i=e.physics.add.group({classType:s,runChildUpdate:!0,runChildCreate:!0});for(let n=0;n<t.length;n++){const a=new s(e,t[n].x,t[n].y);i.add(a)}const a=h(this.player.x,this.player.y,500,1200,20,20),r=new s(e,a[0].x,a[0].y);return i.add(r),i}update(){this.player.update()}}class l extends t.Scene{constructor(){super("GameOver")}create(){this.cameras.main.setBackgroundColor(16711680),this.add.image(512,384,"background").setAlpha(.5),this.add.text(512,384,"Game Over",{fontFamily:"Arial Black",fontSize:64,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5),this.input.once("pointerdown",(()=>{this.scene.start("MainMenu")}))}}class c extends t.Scene{constructor(){super("MainMenu")}create(){this.add.image(512,384,"background"),this.add.image(512,300,"logo"),this.add.text(512,460,"Main Menu",{fontFamily:"Arial Black",fontSize:38,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5),this.input.once("pointerdown",(()=>{this.scene.start("Game")}))}}class d extends t.Scene{constructor(){super("Preloader")}init(){this.add.image(512,384,"background"),this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const e=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",(t=>{e.width=4+460*t}))}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png")}create(){this.scene.start("MainMenu")}}const p={type:Phaser.AUTO,width:1024,height:768,parent:"game-container",backgroundColor:"#028af8",scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}},scene:[s,d,c,o,l]};new Phaser.Game(p);
